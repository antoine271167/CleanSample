parameters:
- name: environmentName
  type: string
- name: azureSubscription
  type: string
- name: appNameBase
  type: string
- name: projectName
  type: string

stages:
# - stage: ${{ parameters.environmentName }}Infra
#   displayName: ${{ parameters.environmentName }} - deploy
#   jobs:
#   - job: Platform
#     displayName: Create Platform for ${{ parameters.environmentName }}
#     steps:
#     - checkout: self
#     - checkout: resources
#     - template: /templates/task/containerapp/containerapp-platform-task.yml@resources
#       parameters:
#         azureSubscription: ${{ parameters.azureSubscription }}
#         appNameBase: ${{ parameters.appNameBase }}
#         appSettings: $(Pipeline.Workspace)\s\CleanSample\cicd\container-app\params.json
#         envAppSettings: $(Pipeline.Workspace)\s\CleanSample\cicd\container-app\params.${{ parameters.environmentName }}.json
#         environmentName: ${{ parameters.environmentName }}

- stage: ${{ parameters.environmentName }}Build
  displayName: ${{ parameters.environmentName }} - build container
  variables:
    acaEnvName: lower(${{ parameters.appNameBase }}-appenv-${{ parameters.environmentName }})
    imageName: lower(${{ parameters.appNameBase }})
    tag: $(Build.BuildId)
    containerRegistryName: lower(replace(${{ parameters.appNameBase }}-cr), '-', '')
    registryUri: $(containerRegistryName).azurecr.io
    dockerFile: ./src/${{ parameters.projectName }}/Dockerfile
  jobs:
    job: Build
    steps:
    - checkout: self
    - checkout: resources
    - template: /templates/task/docker-containerimage-build-task.yml@resources
      parameters:
        azureSubscription: ${{ parameters.azureSubscription }}
        registryUri: $(registryUri)
        imageName: $(imageName)
        tag: $(tag)
        dockerFile: $(dockerFile)
